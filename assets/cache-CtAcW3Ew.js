function i(){return new Promise((t,e)=>{const o=window.indexedDB.open("NovelDB",4);o.onupgradeneeded=function(r){const n=r.target.result;n.objectStoreNames.contains("chapters")||n.createObjectStore("chapters",{keyPath:["ncode","chapterNum"]}),n.objectStoreNames.contains("NovelData")||n.createObjectStore("NovelData",{keyPath:"ncode"})},o.onsuccess=async function(r){const n=r.target.result;t(n)},o.onerror=function(r){e(r.target.error)}})}async function g(t,e){const o=await i();return new Promise((r,n)=>{const c=o.transaction(t,"readwrite");c.objectStore(t).put(e),c.oncomplete=()=>r(),c.onerror=()=>n(c.error)})}async function h(t,e){const o=await i();return new Promise((r,n)=>{const s=o.transaction(t,"readonly").objectStore(t).get(e);s.onsuccess=()=>r(s.result?s.result:null),s.onerror=()=>r(null)})}async function b(t,e=null,o=null){const r=await i();return new Promise((n,c)=>{const a=r.transaction(t,"readonly").objectStore(t).getAll();a.onsuccess=()=>{let l=a.result||[];e&&(l=l.filter(e)),o&&(l=l.sort(o)),n(l)},a.onerror=()=>c(a.error)})}async function m(t,e){const o=await i();return new Promise((r,n)=>{const u=o.transaction("chapters","readwrite").objectStore("chapters");let s=0,a=!1;e.forEach(l=>{const d=u.delete([t,Number(l)]);d.onsuccess=()=>{s++,s===e.length&&!a&&r()},d.onerror=()=>{a=!0,n(d.error)}}),e.length===0&&r()})}function f(){try{return JSON.parse(localStorage.getItem("novel-state"))||{}}catch{return{}}}async function p(t,e,o){let r=f();r[t]||(r[t]={}),r[t].current_chapter!=Number(e)&&(r[t].current_chapter=Number(e)),r[t].total_chapters!=Number(o)&&(r[t].total_chapters=Number(o)),localStorage.setItem("novel-state",JSON.stringify(r));const n=await h("NovelData",t);console.log(n),n.current_chapter=Number(e),n.total_chapters=Number(o),console.log("Saving updated novel to IndexedDB:",n),await g("NovelData",n)}async function N(t){let e=t.ncode,o=f();o[e]||(o[e]={}),o[e]={ncode:t.ncode,title:t.title,author:t.author,current_chapter:t.current_chapter,total_chapters:t.total_chapters,last_checked:t.last_checked,last_cached:new Date().toISOString()},localStorage.setItem("novel-state",JSON.stringify(o))}async function S(t){let e=f();return e&&e[t]?e[t]:null}export{b as getAllFromIndexedDB,h as getFromIndexedDB,S as getNovel,m as removeChaptersFromIndexedDB,g as saveToIndexedDB,N as setNovel,p as setNovelProgress};
